/*!
 *  opentok-angular (https://github.com/aullman/OpenTok-Angular)
 *
 *  Angular module for OpenTok
 *
 *  @Author: Adam Ullman (http://github.com/aullman)
 *  @Copyright (c) 2014 Adam Ullman
 *  @License: Released under the MIT license (http://opensource.org/licenses/MIT)
 **/
if(!window.OT)throw new Error("You must include the OT library before the OT_Angular library");angular.module("opentok",[]).factory("OT",function(){return OT}).factory("OTSession",["OT","$rootScope",function(e,n){var t={streams:[],connections:[],publishers:[],init:function(i,s,o,r){this.session=e.initSession(i,s),t.session.on({sessionConnected:function(){t.publishers.forEach(function(e){t.session.publish(e)})},streamCreated:function(e){n.$apply(function(){t.streams.push(e.stream)})},streamDestroyed:function(e){n.$apply(function(){t.streams.splice(t.streams.indexOf(e.stream),1)})},sessionDisconnected:function(){n.$apply(function(){t.streams.splice(0,t.streams.length),t.connections.splice(0,t.connections.length)})},connectionCreated:function(e){n.$apply(function(){t.connections.push(e.connection)})},connectionDestroyed:function(e){n.$apply(function(){t.connections.splice(t.connections.indexOf(e.connection),1)})}}),this.session.connect(o,function(e){r&&r(e,t.session)}),this.trigger("init")}},i=e.$||e.getHelper();return i.eventing(t),t}]).directive("otLayout",["$window","$parse","OT","OTSession",function(e,n,t,i){return{restrict:"E",link:function(s,o,r){var c=n(r.props)(),u=t.initLayoutContainer(o[0],c),a=function(){u.layout(),s.$emit("otLayoutComplete")};s.$watch(function(){return o.children().length},a),e.addEventListener("resize",a),s.$on("otLayout",a);var l=function(){i.session.on("streamPropertyChanged",function(e){"videoDimensions"===e.changedProperty&&a()})};i.session?l():i.on("init",l)}}}]).directive("otPublisher",["OTSession",function(e){return{restrict:"E",scope:{props:"&"},link:function(n,t,i){var s=n.props()||{};s.width=s.width?s.width:angular.element(t).width(),s.height=s.height?s.height:angular.element(t).height();var o=angular.element(t).children();n.publisher=OT.initPublisher(i.apikey||e.session.apiKey,t[0],s,function(e){e&&n.$emit("otPublisherError",e,n.publisher)}),angular.element(t).append(o),n.publisher.on({accessDenied:function(){n.$emit("otAccessDenied")},accessDialogOpened:function(){n.$emit("otAccessDialogOpened")},accessDialogClosed:function(){n.$emit("otAccessDialogClosed")},accessAllowed:function(){angular.element(t).addClass("allowed"),n.$emit("otAccessAllowed")},loaded:function(){n.$emit("otLayout")},streamCreated:function(){n.$emit("otStreamCreated")},streamDestroyed:function(){n.$emit("otStreamDestroyed")}}),n.$on("$destroy",function(){e.session?e.session.unpublish(n.publisher):n.publisher.destroy(),e.publishers=e.publishers.filter(function(e){return e!==n.publisher}),n.publisher=null}),e.session&&(e.session.connected||e.session.isConnected&&e.session.isConnected())&&e.session.publish(n.publisher,function(e){e&&n.$emit("otPublisherError",e,n.publisher)}),e.publishers.push(n.publisher)}}}]).directive("otSubscriber",["OTSession",function(e){return{restrict:"E",scope:{stream:"=",props:"&"},link:function(n,t){var i=n.stream,s=n.props()||{};s.width=s.width?s.width:angular.element(t).width(),s.height=s.height?s.height:angular.element(t).height();var o=angular.element(t).children(),r=e.session.subscribe(i,t[0],s,function(e){e&&n.$emit("otSubscriberError",e,r)});r.on("loaded",function(){n.$emit("otLayout")}),angular.element(t).append(o),n.$on("$destroy",function(){e.session.unsubscribe(r)})}}}]);